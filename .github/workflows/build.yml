name: Create Release

on:
  pull_request:
    branches: [ 'master' ]
    types: [ 'closed' ]
  push:
    tags: [ 'v*.*.*' ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  prepareBuild:
    name: 'Prepare Version number'
    runs-on: ubuntu-latest
    if: ${{ github.actor == 'fwatermann' || github.actor == 'Flamtky' || github.event_name == 'pull_request' }}
    steps:

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get Release Type by label
        uses: actions-ecosystem/action-release-label@v1
        if: github.event_name == 'pull_request' && github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'skip-release') == false
        id: release-label
        with:
          label_prefix: ''

      - name: Check for Label
        if: steps.release-label.outputs.level == null && github.event_name == 'pull_request' && github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'skip-release') == false
        run: |
          echo "No release label found"
          exit 1

      - name: Get latest Tag
        uses: actions-ecosystem/action-get-latest-tag@v1
        if: github.event_name == 'pull_request' && github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'skip-release') == false
        id: latest-tag

      - name: Bump Version
        uses: actions-ecosystem/action-bump-semver@v1
        id: bump-version
        if: github.event_name == 'pull_request' && github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'skip-release') == false
        with:
          current_version: ${{ steps.latest-tag.outputs.tag }}
          level: ${{ steps.release-label.outputs.level }}

      - name: Set Output to Env
        if: github.event_name == 'pull_request' && github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'skip-release') == false
        run: echo "NEW_VERSION=${{steps.bump-version.outputs.new_version}}" >> $GITHUB_ENV
        
      - name: Push Tag
        uses: actions-ecosystem/action-push-tag@v1
        if: github.event_name == 'pull_request' && github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'skip-release') == false
        with:
          tag: ${{ steps.bump-version.outputs.new_version }}
          message: '${{ steps.bump-version.outputs.new_version }}: PR #${{ github.event.pull_request.number }} ${{ github.event.pull_request.title }}'
          
      - name: 'Look up tag name'
        id: lookup_tag
        if: github.event_name == 'push'
        run: echo "NEW_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

    outputs:
      skip: ${{ github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'skip-release') }}
      new_version: ${{ env.NEW_VERSION }}

  build:
    name: 'Build Docker Image'
    runs-on: ubuntu-latest
    needs: prepareBuild
    steps:

      - name: Copy to env
        run: echo "NEW_VERSION=${{ needs.prepareBuild.outputs.new_version }}" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Extract Docker metadata'
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=auto
            prefix=
            suffix=
          tags: |
            type=semver,pattern={{raw}},value=${{ env.NEW_VERSION }}
            type=semver,pattern=v{{major}},value=${{ env.NEW_VERSION }}
          labels: |
            org.opencontainers.image.version=${{ env.NEW_VERSION }}

      - name: 'Build and Push Docker image'
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: ./
          push: ${{ needs.prepareBuild.outputs.skip == 'false' }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
